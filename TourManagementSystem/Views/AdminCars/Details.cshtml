@model TourManagementSystem.Models.AdminCarRentalViewModel
@{
    ViewData["Title"] = "Car Rental Details";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    var defaultCarImage = Url.Content("~/images/default_car.jpg"); // Ensure this image exists or adjust path
}

<nav aria-label="breadcrumb" class="breadcrumb-admin">
    <ol class="breadcrumb mb-0">
        <li class="breadcrumb-item"><a asp-controller="Admin" asp-action="Index">Dashboard</a></li>
        <li class="breadcrumb-item"><a asp-action="Index">Manage Car Rentals</a></li>
        <li class="breadcrumb-item active" aria-current="page">Details: @Model.CarModel</li>
    </ol>
</nav>

<div class="admin-form-container">
    <h2><i class="fa fa-info-circle"></i> Car Rental Details: @Model.CarModel</h2>
    <hr />
    @if (Model != null) // Model itself will not be null if found, but good check
    {
        <div class="row">
            <div class="col-md-4">
                @* ImageUrl is required in the simplified ViewModel, so no need for string.IsNullOrEmpty check *if* data is valid *@
                @* However, keeping it for robustness in case an invalid empty string gets through or for future flexibility *@
                @if (!string.IsNullOrEmpty(Model.ImageUrl))
                {
                    <img src="@Url.Content(Model.ImageUrl)" alt="@Model.CarModel" class="img-fluid rounded shadow-sm mb-3"
                         onerror="this.onerror=null; this.src='@defaultCarImage';" />
                }
                else
                {
                    @* This 'else' block might not be reachable if ImageUrl is strictly required by the ViewModel and entity *@
                    <img src="@defaultCarImage" alt="Default Car Image" class="img-fluid rounded shadow-sm mb-3" />
                }
            </div>
            <div class="col-md-8">
                <dl class="row">
                    <dt class="col-sm-4">ID:</dt>
                    <dd class="col-sm-8">@Model.Id</dd>

                    <dt class="col-sm-4">Car Model/Name:</dt>
                    <dd class="col-sm-8">@Html.DisplayFor(model => model.CarModel)</dd>

                    <dt class="col-sm-4">Company:</dt>
                    <dd class="col-sm-8">@Html.DisplayFor(model => model.Company)</dd>

                    <dt class="col-sm-4">Location:</dt>
                    <dd class="col-sm-8">@Html.DisplayFor(model => model.Location)</dd>

                    <dt class="col-sm-4">Price per Day:</dt>
                    <dd class="col-sm-8">@Model.PricePerDay.ToString("C")</dd>

                    @* Removed PassengerCapacity, TransmissionType, IsAvailable, Description as they are not in the simplified ViewModel *@

                    <dt class="col-sm-4">Managed By User ID:</dt>
                    @* UserId in the simplified ViewModel is a non-nullable int, so .HasValue check is not applicable *@
                    <dd class="col-sm-8">@Model.UserId</dd>
                </dl>
            </div>
        </div>
        @* Removed Description display section *@
        <hr />
        <div class="mt-3">
            <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-primary"><i class="fa fa-pencil"></i> Edit</a>
            <a asp-action="Index" class="btn btn-outline-secondary ms-2">Back to List</a>
        </div>
    }
    else
    {
        <div class="alert alert-warning">Car Rental details not found.</div>
        <a asp-action="Index" class="btn btn-outline-secondary">Back to List</a>
    }
</div>